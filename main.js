(()=>{"use strict";var n={734:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,".current-temps {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.current-temps img {\n  height: 75px;\n}\n\n.city-name {\n  font-size: 1.6rem;\n}\n\n.current-conditions {\n  font-size: 1.3rem;\n}\n\n.current-time {\n  color: grey;\n}\n\n.current-temp {\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.low-temp {\n  color: var(--subtext-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  .current-temp {\n    font-size: 3rem;\n  }\n}","",{version:3,sources:["webpack://./src/components/current/current.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;;EAEE;IACE,eAAe;EACjB;AACF",sourcesContent:[".current-temps {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.current-temps img {\n  height: 75px;\n}\n\n.city-name {\n  font-size: 1.6rem;\n}\n\n.current-conditions {\n  font-size: 1.3rem;\n}\n\n.current-time {\n  color: grey;\n}\n\n.current-temp {\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.low-temp {\n  color: var(--subtext-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  .current-temp {\n    font-size: 3rem;\n  }\n}"],sourceRoot:""}]);const s=i},473:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,".daily-headings.card-daily {\n  color: var(--theme-color);\n  font-size: 1.1rem;\n}\n\n.daily-temps img {\n  height: 75px;\n}\n\n.daily-conditions {\n  display: flex;\n  justify-content: center;\n}\n\n.card-daily {\n  padding: 0 40px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 75px;\n  align-items: center;\n  border-bottom: 1px solid grey;\n  font-size: .9rem;\n}\n\n.daily-temp,\n.daily-rain,\n.daily-humidity {\n  text-align: right;\n}\n\n.daily-lo {\n  color: var(--subtext-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  .daily-headings.card-daily {\n    font-size: .8rem !important;\n  }\n\n  .weekday {\n    font-size: .6rem;\n  }\n\n  .card-daily {\n    padding: 0;\n  }\n}","",{version:3,sources:["webpack://./src/components/daily/daily.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,qCAAqC;EACrC,wBAAwB;EACxB,mBAAmB;EACnB,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA;;;EAGE,iBAAiB;AACnB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;;EAEE;IACE,2BAA2B;EAC7B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,UAAU;EACZ;AACF",sourcesContent:[".daily-headings.card-daily {\n  color: var(--theme-color);\n  font-size: 1.1rem;\n}\n\n.daily-temps img {\n  height: 75px;\n}\n\n.daily-conditions {\n  display: flex;\n  justify-content: center;\n}\n\n.card-daily {\n  padding: 0 40px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 75px;\n  align-items: center;\n  border-bottom: 1px solid grey;\n  font-size: .9rem;\n}\n\n.daily-temp,\n.daily-rain,\n.daily-humidity {\n  text-align: right;\n}\n\n.daily-lo {\n  color: var(--subtext-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  .daily-headings.card-daily {\n    font-size: .8rem !important;\n  }\n\n  .weekday {\n    font-size: .6rem;\n  }\n\n  .card-daily {\n    padding: 0;\n  }\n}"],sourceRoot:""}]);const s=i},239:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,'header {\n  padding: 20px 0;\n  background-color: rgb(52, 58, 64);\n}\n\nform {\n  display: grid;\n  grid-template-columns: 2fr 100px 1fr;\n}\n\n#search,\nbutton {\n  height: 35px;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n}\n\n#search {\n  width: 100%;\n  padding: 0 10px;\n  border-top-left-radius: var(--input-border-radius);\n  border-bottom-left-radius: var(--input-border-radius);\n}\n\n#search:focus {\n  box-shadow: 0 0 3pt 2pt var(--theme-color);\n  border-top-left-radius: var(--input-border-radius);\n  border-bottom-left-radius: var(--input-border-radius);\n}\n\nbutton {\n  color: white;\n}\n\nbutton[type="submit"] {\n  width: 80px;\n  font-weight: 700;\n  background-color: var(--theme-color);\n  border-top-right-radius: var(--input-border-radius);\n  border-bottom-right-radius: var(--input-border-radius);\n}\n\nbutton:hover {\n  filter: saturate(.6);\n  cursor: pointer;\n}\n\nbutton.toggle-units {\n  border-radius: var(--input-border-radius);\n  background-color: rgb(52, 58, 64);\n  border: 2px solid var(--theme-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  form {\n    grid-template-columns: 1fr 100px;\n    grid-template-rows: 60px;\n    grid-template-areas:\n      "search button"\n      "toggle toggle";\n  }\n\n  button[type="submit"] {\n    width: 100%;\n  }\n\n  .toggle-units {\n    grid-area: toggle;\n  }\n}',"",{version:3,sources:["webpack://./src/components/header/header.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,oCAAoC;AACtC;;AAEA;;EAEE,YAAY;EACZ,eAAe;EACf,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,WAAW;EACX,eAAe;EACf,kDAAkD;EAClD,qDAAqD;AACvD;;AAEA;EACE,0CAA0C;EAC1C,kDAAkD;EAClD,qDAAqD;AACvD;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,oCAAoC;EACpC,mDAAmD;EACnD,sDAAsD;AACxD;;AAEA;EACE,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,yCAAyC;EACzC,iCAAiC;EACjC,oCAAoC;AACtC;;AAEA;;EAEE;IACE,gCAAgC;IAChC,wBAAwB;IACxB;;qBAEiB;EACnB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:['header {\n  padding: 20px 0;\n  background-color: rgb(52, 58, 64);\n}\n\nform {\n  display: grid;\n  grid-template-columns: 2fr 100px 1fr;\n}\n\n#search,\nbutton {\n  height: 35px;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n}\n\n#search {\n  width: 100%;\n  padding: 0 10px;\n  border-top-left-radius: var(--input-border-radius);\n  border-bottom-left-radius: var(--input-border-radius);\n}\n\n#search:focus {\n  box-shadow: 0 0 3pt 2pt var(--theme-color);\n  border-top-left-radius: var(--input-border-radius);\n  border-bottom-left-radius: var(--input-border-radius);\n}\n\nbutton {\n  color: white;\n}\n\nbutton[type="submit"] {\n  width: 80px;\n  font-weight: 700;\n  background-color: var(--theme-color);\n  border-top-right-radius: var(--input-border-radius);\n  border-bottom-right-radius: var(--input-border-radius);\n}\n\nbutton:hover {\n  filter: saturate(.6);\n  cursor: pointer;\n}\n\nbutton.toggle-units {\n  border-radius: var(--input-border-radius);\n  background-color: rgb(52, 58, 64);\n  border: 2px solid var(--theme-color);\n}\n\n@media only screen and (max-width: 600px) {\n\n  form {\n    grid-template-columns: 1fr 100px;\n    grid-template-rows: 60px;\n    grid-template-areas:\n      "search button"\n      "toggle toggle";\n  }\n\n  button[type="submit"] {\n    width: 100%;\n  }\n\n  .toggle-units {\n    grid-area: toggle;\n  }\n}'],sourceRoot:""}]);const s=i},829:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,".hourly-temps {\n  width: 100%;\n  overflow-x: scroll;\n\n  display: grid;\n  grid-template-columns: repeat(48, 1fr);\n}\n\n.card-hourly {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.hourly-rain {\n  color: rgb(0, 123, 255);\n  font-size: .7rem;\n}\n\n.period {\n  color: var(--subtext-color);\n  font-size: .6rem;\n}","",{version:3,sources:["webpack://./src/components/hourly/hourly.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,kBAAkB;;EAElB,aAAa;EACb,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;EAC3B,gBAAgB;AAClB",sourcesContent:[".hourly-temps {\n  width: 100%;\n  overflow-x: scroll;\n\n  display: grid;\n  grid-template-columns: repeat(48, 1fr);\n}\n\n.card-hourly {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.hourly-rain {\n  color: rgb(0, 123, 255);\n  font-size: .7rem;\n}\n\n.period {\n  color: var(--subtext-color);\n  font-size: .6rem;\n}"],sourceRoot:""}]);const s=i},966:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,".other {\n  background-color: #343a40;\n}\n\n.other>.wrapper {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 70px);\n  grid-auto-rows: 70px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n\n.other>.wrapper>* {\n  display: grid;\n  grid-template-rows: 20px;\n}\n\n.other span {\n  color: white;\n  font-size: .8rem;\n}\n\n.other-label {\n  text-transform: uppercase;\n  color: var(--subtext-color) !important;\n  font-size: .7rem !important;\n}\n\n@media only screen and (max-width: 600px) {\n\n  .other>.wrapper {\n    grid-template-columns: repeat(2, 1fr);\n\n  }\n\n  .other span {\n    font-size: 1rem;\n  }\n\n  .other {\n    order: 5;\n  }\n}","",{version:3,sources:["webpack://./src/components/other/other.css"],names:[],mappings:"AAAA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,mCAAmC;EACnC,oBAAoB;EACpB,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,sCAAsC;EACtC,2BAA2B;AAC7B;;AAEA;;EAEE;IACE,qCAAqC;;EAEvC;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,QAAQ;EACV;AACF",sourcesContent:[".other {\n  background-color: #343a40;\n}\n\n.other>.wrapper {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 70px);\n  grid-auto-rows: 70px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n\n.other>.wrapper>* {\n  display: grid;\n  grid-template-rows: 20px;\n}\n\n.other span {\n  color: white;\n  font-size: .8rem;\n}\n\n.other-label {\n  text-transform: uppercase;\n  color: var(--subtext-color) !important;\n  font-size: .7rem !important;\n}\n\n@media only screen and (max-width: 600px) {\n\n  .other>.wrapper {\n    grid-template-columns: repeat(2, 1fr);\n\n  }\n\n  .other span {\n    font-size: 1rem;\n  }\n\n  .other {\n    order: 5;\n  }\n}"],sourceRoot:""}]);const s=i},426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),s=t(239),A=t(734),d=t(473),c=t(829),l=t(966),p=i()(a());p.i(s.Z),p.i(A.Z),p.i(d.Z),p.i(c.Z),p.i(l.Z),p.push([n.id,":root {\n  --input-border-radius: 5px;\n  --subtext-color: rgb(157, 157, 157);\n  --theme-color: rgb(235, 111, 76);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n  box-sizing: border-box;\n}\n\n.hide {\n  display: none !important;\n}\n\n.wrapper {\n  padding: 0 20px;\n  max-width: 1000px;\n  margin: auto;\n}\n\nimg {\n  height: 50px;\n}\n\n.top-half {\n  display: flex;\n  padding-top: 20px;\n  padding-bottom: 20px;\n}\n\n.results {\n  padding-bottom: 20px;\n}\n\n.error.active {\n  margin-top: 20px;\n  padding: 10px;\n  width: 90%;\n  text-align: center;\n  color: red;\n  font-weight: 700;\n  border: 2px solid red;\n  border-radius: var(--input-border-radius);\n}\n\n.loading-screen {\n  position: absolute;\n  top: 0px;\n  background-color: rgba(255, 255, 255, 0.408);\n  height: 100%;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loader {\n  /* background */\n  border: 16px solid rgb(243, 243, 243);\n  /* fordground */\n  border-top: 16px solid var(--theme-color);\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAMA;EACE,0BAA0B;EAC1B,mCAAmC;EACnC,gCAAgC;AAClC;;AAEA;EACE,SAAS;EACT,UAAU;EACV,yCAAyC;EACzC,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,UAAU;EACV,kBAAkB;EAClB,UAAU;EACV,gBAAgB;EAChB,qBAAqB;EACrB,yCAAyC;AAC3C;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,4CAA4C;EAC5C,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,qCAAqC;EACrC,eAAe;EACf,yCAAyC;EACzC,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE;IACE,uBAAuB;EACzB;;EAEA;IACE,yBAAyB;EAC3B;AACF",sourcesContent:["@import './components/header/header.css';\n@import './components/current/current.css';\n@import './components/daily/daily.css';\n@import './components/hourly/hourly.css';\n@import './components/other/other.css';\n\n:root {\n  --input-border-radius: 5px;\n  --subtext-color: rgb(157, 157, 157);\n  --theme-color: rgb(235, 111, 76);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n  box-sizing: border-box;\n}\n\n.hide {\n  display: none !important;\n}\n\n.wrapper {\n  padding: 0 20px;\n  max-width: 1000px;\n  margin: auto;\n}\n\nimg {\n  height: 50px;\n}\n\n.top-half {\n  display: flex;\n  padding-top: 20px;\n  padding-bottom: 20px;\n}\n\n.results {\n  padding-bottom: 20px;\n}\n\n.error.active {\n  margin-top: 20px;\n  padding: 10px;\n  width: 90%;\n  text-align: center;\n  color: red;\n  font-weight: 700;\n  border: 2px solid red;\n  border-radius: var(--input-border-radius);\n}\n\n.loading-screen {\n  position: absolute;\n  top: 0px;\n  background-color: rgba(255, 255, 255, 0.408);\n  height: 100%;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loader {\n  /* background */\n  border: 16px solid rgb(243, 243, 243);\n  /* fordground */\n  border-top: 16px solid var(--theme-color);\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}"],sourceRoot:""}]);const u=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var A=n[s],d=r.base?A[0]+r.base:A[0],c=o[d]||0,l="".concat(d," ").concat(c);o[d]=c+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var A=r(n,a),d=0;d<o.length;d++){var c=t(o[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),A=t.n(s),d=t(216),c=t.n(d),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=async(n,e)=>{const t=document.querySelector(".loading-screen");t.classList.remove("hide");try{const r=await(async n=>{const e=await fetch(`https://nominatim.openstreetmap.org/search?q=${n}&format=json&limit=1`),[t]=await e.json();if(void 0!==t){const{display_name:n,lat:e,lon:r}=t;return{lat:e,lon:r,name:n.split(",")[0],cod:200}}return{cod:404,message:"Could not find city."}})(n);if(200!==r.cod)return t.classList.add("hide"),r;const{lat:a,lon:o,name:i}=r;console.log("MISSING_ENV_VAR".WEATHER_API);const s=await fetch(`https://api.openweathermap.org/data/3.0/onecall?lat=${a}&lon=${o}&appid=${"MISSING_ENV_VAR".WEATHER_API}&units=${e}`),A=await s.json();if(t.classList.add("hide"),A.cod){const{message:n}=A;return{message:n}}const{current:d,daily:c,hourly:l,minutely:p,timezone:u}=A;return{name:i,current:d,daily:c,hourly:l,minutely:p,timezone:u}}catch(n){return t.classList.add("hide"),console.log(n)}},E=(n,e)=>new Date(1e3*n).toLocaleTimeString("en-US",{timeZone:e,timeStyle:"short"}),g=n=>{for(;n.firstChild;)n.removeChild(n.firstChild)};let h;const y=()=>h,f=async(n,e="imperial")=>{const t=document.querySelector(".hourly-temps"),r=document.querySelector(".daily-temps"),a=document.querySelector(".error"),o=await C(n,e);if(o.message)return a.classList.add("active"),void(a.textContent=o.message);a.textContent="",a.classList.remove("active"),g(t),g(r);const{name:i,current:s,daily:A,hourly:d,minutely:c,timezone:l}=o;(n=>{h=n})(i),((n,e,t,r)=>{const{temp:a,dt:o,weather:[{main:i,icon:s,description:A}]}=e,[{temp:{min:d,max:c}}]=t,l=E(o,r);document.querySelector(".current-temps").innerHTML=`\n  <div class="city-name">${n}</div>\n  <div><span class="current-conditions">${i}</span> <span class="current-time">${l}</span></div>\n  <div class="current-temp"><span class="current-conditions"><img src="https://openweathermap.org/img/wn/${s}@2x.png" alt="${A}"/></span> <span class="number-temp">${a}</span>°</div>\n  \n  <div class="current-hi-lo">\n    <span class="low-temp">L:<span class="low-temp"><span class="number-temp">${d}</span>°</span></span>\n    <span class="high-temp">H:<span class="high-temp"><span class="number-temp">${c}</span>°</span></span>\n  </div>\n  `})(i,s,A,l),((n,e,t,r)=>{const{wind_speed:a,feels_like:o,clouds:i,visibility:s,pressure:A,humidity:d,sunrise:c,sunset:l,uvi:p}=n,[{precipitation:u}]=e,m=(.029529983071445*A).toFixed(2),C=E(c,t),g=E(l,t);let h=s,y="m";"imperial"===r&&(h=(s/1609).toFixed(2),y="mi"),document.querySelector(".other").innerHTML=`\n  <div class="wrapper">\n    <div class="feels-like"><span class="other-label">Feels like</span> <span><span class="number-temp">${o}</span>°</span></div>\n    <div class="humidity"><span class="other-label">Humidity</span> <span>${d}%</span></div>\n    <div class="precipitation"><span class="other-label">Precipitation</span> <span>${u}<span> mm</span></span></div>\n    <div class="cloudiness"><span class="other-label">Cloudiness</span> <span>${i}%</span></div>\n    <div class="speed"><span class="other-label">Wind speed</span> <span><span class="number-speed">${a}</span> <span class="unit-speed">mph</span></span></span></div>\n    <div class="uvi"><span class="other-label">UV Index</span> <span>${p}</span></div>\n    <div class="cloudiness"><span class="other-label">Visibility</span> <span><span class="number-distance">${h}</span> <span class="unit-distance">${y}</span></span></div>\n    <div class="pressure"><span class="other-label">Pressure</span> <span>${m} inHg</span></div>\n    <div class="sunrise"><span class="other-label">Sunrise</span> <span>${C}</span></div>\n    <div class="sunset"><span class="other-label">Sunset</span> <span>${g}</span></div>\n  </div>\n  `})(s,c,l,e),d.forEach((n=>{((n,e)=>{const{pop:t,temp:r,dt:a,weather:[{icon:o,description:i}]}=n,s=E(a,e).split(" "),A=s[0].split(":")[0],d=s[1],c=Math.round(100*t),l=document.querySelector(".hourly-temps"),p=document.createElement("div");p.classList.add("card-hourly"),p.innerHTML=`\n  <div class="hourly-time">${A}<span class="period">${d}</span></div>\n  <div class="hourly-conditions"><img src="https://openweathermap.org/img/wn/${o}@2x.png" alt="${i}"/></div>\n  <div class="hourly-temp"><span class="number-temp">${r}</span>°</div>\n  <div class="hourly-rain">${c}%</div>\n  `,l.append(p)})(n,l)})),(()=>{const n=document.querySelector(".daily-temps"),e=document.createElement("div");e.classList.add("daily-headings"),e.classList.add("card-daily"),e.innerHTML='\n  <div>Day</div>\n  <div class="daily-conditions"> </div>\n  <div class="daily-temp">Low/High</div>\n  <div class="daily-rain">Rain</div>\n  <div class="daily-humidity">Humidity</div>\n  ',n.append(e)})(),A.shift(),A.forEach((n=>{(n=>{const{weather:[{icon:e,description:t}],temp:{min:r,max:a},dt:o,humidity:i,pop:s}=n,A=Math.round(100*s),d=new Date(1e3*o).toLocaleString("en-US",{timeZone:void 0,weekday:"long"}),c=document.querySelector(".daily-temps"),l=document.createElement("div");l.classList.add("card-daily"),l.innerHTML=`\n  <div class="weekday">${d}</div>\n  <div class="daily-conditions"><img src="https://openweathermap.org/img/wn/${e}@2x.png" alt="${t}"/></div>\n  <div class="daily-temp"><span class="daily-lo"><span class="number-temp">${r}</span>°</span> <span class="daily-hi"><span class="number-temp">${a}</span>°</span></div>\n  <div class="daily-rain">${A}%</div>\n  <div class="daily-humidity">${i}%</div>\n  `,c.append(l)})(n)})),document.querySelectorAll(".number-temp").forEach((n=>{n.textContent=Math.round(n.textContent)}))};let v="imperial";const b=n=>{document.querySelector(".unit-speed").textContent=n};document.body.append((()=>{const n=document.createElement("header");return n.innerHTML='\n    <form class="wrapper">\n      <label for="search"\n        ><input \n        type="text" \n        name="search" \n        id="search"\n        placeholder="Enter a city"\n      /></label>\n      <button type="submit">Search</button>\n      <button type="button" class="toggle-units">Metric: °C, meters/ Imperial: °F, miles</button>\n    </form>\n  ',n})(),(()=>{const n=document.createElement("main");return n.innerHTML='\n  <div class="loading-screen">\n    <div class="loader"></div>\n  </div>\n  <div class="results">\n    <div class="error wrapper"></div>\n    <div class="top-half wrapper">\n      <div class="current-temps"></div>\n      <div class="hourly-temps"></div>\n      </div>\n    <div class="other"></div>\n    <div class="daily-temps wrapper"></div>\n  </div>\n  \n  ',n})());const B=document.querySelector("form"),x=document.getElementById("search"),w=document.querySelector(".toggle-units");B.addEventListener("submit",(n=>{n.preventDefault(),f(x.value)})),w.addEventListener("click",(async()=>{const n=y();"imperial"===v?(await f(n,"metric"),b("m/s"),v="metric"):(await f(n,"imperial"),b("mph"),v="imperial")})),f("Los Angeles")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNJaEIsZUFHOUJ2QixFQUFXMkMsT0FBT0QsRUFBSyxFTG9CckIsQ0FBY0ksRUFBYyxJTTVDVnJJLFNBQVN3SSxpQkFBaUIsZ0JBQ2xDZixTQUFTOUIsSUFDbkJBLEVBQUtGLFlBQWNzQyxLQUFLQyxNQUFNckMsRUFBS0YsWUFBWSxHTjZDckMsRU83Q2QsSUFBSXRDLEVBQU8sV0FFWCxNQUFNc0YsRUFBbUJDLElBQ0wxSSxTQUFTQyxjQUFjLGVBQy9Cd0YsWUFBY2lELENBQUcsRUNEN0IxSSxTQUFTMkksS0FBS1QsT0NOSyxNQUNqQixNQUFNVSxFQUFTNUksU0FBU1csY0FBYyxVQWdCdEMsT0FkQWlJLEVBQU92QyxVQUFZLHNXQWNadUMsQ0FBTSxFRFhNLEdFTkosTUFDZixNQUFNOUMsRUFBTzlGLFNBQVNXLGNBQWMsUUFrQnBDLE9BaEJBbUYsRUFBS08sVUFBWSw4V0FnQlZQLENBQUksRUZic0IsSUFFbkMsTUFBTSxFQUFPOUYsU0FBU0MsY0FBYyxRQUM5QjRJLEVBQVM3SSxTQUFTOEksZUFBZSxVQUNqQ0MsRUFBUy9JLFNBQVNDLGNBQWMsaUJBRXRDLEVBQUsrSSxpQkFBaUIsVUFBVzFJLElBQy9CQSxFQUFFMkksaUJBQ0YsRUFBV0osRUFBT0ssTUFBTSxJQUcxQkgsRUFBT0MsaUJBQWlCLFNEUEovRixVQUNsQixNQUFNa0MsRUFBa0JDLElBQ1gsYUFBVGpDLFNBQ0ksRUFBV2dDLEVBQWlCLFVBQ2xDc0QsRUFBZ0IsT0FDaEJ0RixFQUFPLGlCQUVELEVBQVdnQyxFQUFpQixZQUNsQ3NELEVBQWdCLE9BQ2hCdEYsRUFBTyxXQUNULElDREYsRUFBVyxjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvY29tcG9uZW50cy9jdXJyZW50L2N1cnJlbnQuY3NzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvZGFpbHkvZGFpbHkuY3NzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvY29tcG9uZW50cy9ob3VybHkvaG91cmx5LmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL290aGVyL290aGVyLmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvY29tcG9uZW50cy9vcGVuV2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL25vbWluYXRpbS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL2Zvcm1hdFRpbWUuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvY29tcG9uZW50cy9yZW1vdmVBbGxDaGlsZE5vZGVzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvY3VycmVudExvY2F0aW9uLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvc2V0V2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL2N1cnJlbnQvbWFrZUN1cnJlbnRDYXJkLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvb3RoZXIvbWFrZU90aGVyQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL2hvdXJseS9tYWtlSG91cmx5Q2FyZC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL2RhaWx5L21ha2VEYWlseUhlYWRpbmdzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvZGFpbHkvbWFrZURhaWx5Q2FyZC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL3JvdW5kVGVtcHMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvY29tcG9uZW50cy90b2dnbGVVbml0cy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9jb21wb25lbnRzL2hlYWRlci9tYWtlSGVhZGVyLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2NvbXBvbmVudHMvbWFrZU1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuY3VycmVudC10ZW1wcyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5jdXJyZW50LXRlbXBzIGltZyB7XFxuICBoZWlnaHQ6IDc1cHg7XFxufVxcblxcbi5jaXR5LW5hbWUge1xcbiAgZm9udC1zaXplOiAxLjZyZW07XFxufVxcblxcbi5jdXJyZW50LWNvbmRpdGlvbnMge1xcbiAgZm9udC1zaXplOiAxLjNyZW07XFxufVxcblxcbi5jdXJyZW50LXRpbWUge1xcbiAgY29sb3I6IGdyZXk7XFxufVxcblxcbi5jdXJyZW50LXRlbXAge1xcbiAgZm9udC1zaXplOiA0cmVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmxvdy10ZW1wIHtcXG4gIGNvbG9yOiB2YXIoLS1zdWJ0ZXh0LWNvbG9yKTtcXG59XFxuXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xcblxcbiAgLmN1cnJlbnQtdGVtcCB7XFxuICAgIGZvbnQtc2l6ZTogM3JlbTtcXG4gIH1cXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvY3VycmVudC9jdXJyZW50LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCOztBQUVBOztFQUVFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5jdXJyZW50LXRlbXBzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmN1cnJlbnQtdGVtcHMgaW1nIHtcXG4gIGhlaWdodDogNzVweDtcXG59XFxuXFxuLmNpdHktbmFtZSB7XFxuICBmb250LXNpemU6IDEuNnJlbTtcXG59XFxuXFxuLmN1cnJlbnQtY29uZGl0aW9ucyB7XFxuICBmb250LXNpemU6IDEuM3JlbTtcXG59XFxuXFxuLmN1cnJlbnQtdGltZSB7XFxuICBjb2xvcjogZ3JleTtcXG59XFxuXFxuLmN1cnJlbnQtdGVtcCB7XFxuICBmb250LXNpemU6IDRyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4ubG93LXRlbXAge1xcbiAgY29sb3I6IHZhcigtLXN1YnRleHQtY29sb3IpO1xcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuXFxuICAuY3VycmVudC10ZW1wIHtcXG4gICAgZm9udC1zaXplOiAzcmVtO1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZGFpbHktaGVhZGluZ3MuY2FyZC1kYWlseSB7XFxuICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3IpO1xcbiAgZm9udC1zaXplOiAxLjFyZW07XFxufVxcblxcbi5kYWlseS10ZW1wcyBpbWcge1xcbiAgaGVpZ2h0OiA3NXB4O1xcbn1cXG5cXG4uZGFpbHktY29uZGl0aW9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5jYXJkLWRhaWx5IHtcXG4gIHBhZGRpbmc6IDAgNDBweDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA3NXB4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmV5O1xcbiAgZm9udC1zaXplOiAuOXJlbTtcXG59XFxuXFxuLmRhaWx5LXRlbXAsXFxuLmRhaWx5LXJhaW4sXFxuLmRhaWx5LWh1bWlkaXR5IHtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbn1cXG5cXG4uZGFpbHktbG8ge1xcbiAgY29sb3I6IHZhcigtLXN1YnRleHQtY29sb3IpO1xcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuXFxuICAuZGFpbHktaGVhZGluZ3MuY2FyZC1kYWlseSB7XFxuICAgIGZvbnQtc2l6ZTogLjhyZW0gIWltcG9ydGFudDtcXG4gIH1cXG5cXG4gIC53ZWVrZGF5IHtcXG4gICAgZm9udC1zaXplOiAuNnJlbTtcXG4gIH1cXG5cXG4gIC5jYXJkLWRhaWx5IHtcXG4gICAgcGFkZGluZzogMDtcXG4gIH1cXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvZGFpbHkvZGFpbHkuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsYUFBYTtFQUNiLHFDQUFxQztFQUNyQyx3QkFBd0I7RUFDeEIsbUJBQW1CO0VBQ25CLDZCQUE2QjtFQUM3QixnQkFBZ0I7QUFDbEI7O0FBRUE7OztFQUdFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTs7RUFFRTtJQUNFLDJCQUEyQjtFQUM3Qjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLFVBQVU7RUFDWjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5kYWlseS1oZWFkaW5ncy5jYXJkLWRhaWx5IHtcXG4gIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvcik7XFxuICBmb250LXNpemU6IDEuMXJlbTtcXG59XFxuXFxuLmRhaWx5LXRlbXBzIGltZyB7XFxuICBoZWlnaHQ6IDc1cHg7XFxufVxcblxcbi5kYWlseS1jb25kaXRpb25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmNhcmQtZGFpbHkge1xcbiAgcGFkZGluZzogMCA0MHB4O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDc1cHg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyZXk7XFxuICBmb250LXNpemU6IC45cmVtO1xcbn1cXG5cXG4uZGFpbHktdGVtcCxcXG4uZGFpbHktcmFpbixcXG4uZGFpbHktaHVtaWRpdHkge1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxufVxcblxcbi5kYWlseS1sbyB7XFxuICBjb2xvcjogdmFyKC0tc3VidGV4dC1jb2xvcik7XFxufVxcblxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcXG5cXG4gIC5kYWlseS1oZWFkaW5ncy5jYXJkLWRhaWx5IHtcXG4gICAgZm9udC1zaXplOiAuOHJlbSAhaW1wb3J0YW50O1xcbiAgfVxcblxcbiAgLndlZWtkYXkge1xcbiAgICBmb250LXNpemU6IC42cmVtO1xcbiAgfVxcblxcbiAgLmNhcmQtZGFpbHkge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJoZWFkZXIge1xcbiAgcGFkZGluZzogMjBweCAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUyLCA1OCwgNjQpO1xcbn1cXG5cXG5mb3JtIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxMDBweCAxZnI7XFxufVxcblxcbiNzZWFyY2gsXFxuYnV0dG9uIHtcXG4gIGhlaWdodDogMzVweDtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbiNzZWFyY2gge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAwIDEwcHg7XFxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IHZhcigtLWlucHV0LWJvcmRlci1yYWRpdXMpO1xcbn1cXG5cXG4jc2VhcmNoOmZvY3VzIHtcXG4gIGJveC1zaGFkb3c6IDAgMCAzcHQgMnB0IHZhcigtLXRoZW1lLWNvbG9yKTtcXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IHZhcigtLWlucHV0LWJvcmRlci1yYWRpdXMpO1xcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxufVxcblxcbmJ1dHRvbiB7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcblxcbmJ1dHRvblt0eXBlPVxcXCJzdWJtaXRcXFwiXSB7XFxuICB3aWR0aDogODBweDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvcik7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICBmaWx0ZXI6IHNhdHVyYXRlKC42KTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuYnV0dG9uLnRvZ2dsZS11bml0cyB7XFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig1MiwgNTgsIDY0KTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yKTtcXG59XFxuXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xcblxcbiAgZm9ybSB7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDEwMHB4O1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDYwcHg7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgXFxcInNlYXJjaCBidXR0b25cXFwiXFxuICAgICAgXFxcInRvZ2dsZSB0b2dnbGVcXFwiO1xcbiAgfVxcblxcbiAgYnV0dG9uW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuXFxuICAudG9nZ2xlLXVuaXRzIHtcXG4gICAgZ3JpZC1hcmVhOiB0b2dnbGU7XFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixvQ0FBb0M7QUFDdEM7O0FBRUE7O0VBRUUsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixrREFBa0Q7RUFDbEQscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UsMENBQTBDO0VBQzFDLGtEQUFrRDtFQUNsRCxxREFBcUQ7QUFDdkQ7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLG9DQUFvQztFQUNwQyxtREFBbUQ7RUFDbkQsc0RBQXNEO0FBQ3hEOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5Q0FBeUM7RUFDekMsaUNBQWlDO0VBQ2pDLG9DQUFvQztBQUN0Qzs7QUFFQTs7RUFFRTtJQUNFLGdDQUFnQztJQUNoQyx3QkFBd0I7SUFDeEI7O3FCQUVpQjtFQUNuQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImhlYWRlciB7XFxuICBwYWRkaW5nOiAyMHB4IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNTIsIDU4LCA2NCk7XFxufVxcblxcbmZvcm0ge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDEwMHB4IDFmcjtcXG59XFxuXFxuI3NlYXJjaCxcXG5idXR0b24ge1xcbiAgaGVpZ2h0OiAzNXB4O1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuI3NlYXJjaCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IHZhcigtLWlucHV0LWJvcmRlci1yYWRpdXMpO1xcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxufVxcblxcbiNzZWFyY2g6Zm9jdXMge1xcbiAgYm94LXNoYWRvdzogMCAwIDNwdCAycHQgdmFyKC0tdGhlbWUtY29sb3IpO1xcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuYnV0dG9uW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gIHdpZHRoOiA4MHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yKTtcXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gIGZpbHRlcjogc2F0dXJhdGUoLjYpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG5idXR0b24udG9nZ2xlLXVuaXRzIHtcXG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWlucHV0LWJvcmRlci1yYWRpdXMpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUyLCA1OCwgNjQpO1xcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tdGhlbWUtY29sb3IpO1xcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuXFxuICBmb3JtIHtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMTAwcHg7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNjBweDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcXG4gICAgICBcXFwic2VhcmNoIGJ1dHRvblxcXCJcXG4gICAgICBcXFwidG9nZ2xlIHRvZ2dsZVxcXCI7XFxuICB9XFxuXFxuICBidXR0b25bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG5cXG4gIC50b2dnbGUtdW5pdHMge1xcbiAgICBncmlkLWFyZWE6IHRvZ2dsZTtcXG4gIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmhvdXJseS10ZW1wcyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG92ZXJmbG93LXg6IHNjcm9sbDtcXG5cXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0OCwgMWZyKTtcXG59XFxuXFxuLmNhcmQtaG91cmx5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4uaG91cmx5LXJhaW4ge1xcbiAgY29sb3I6IHJnYigwLCAxMjMsIDI1NSk7XFxuICBmb250LXNpemU6IC43cmVtO1xcbn1cXG5cXG4ucGVyaW9kIHtcXG4gIGNvbG9yOiB2YXIoLS1zdWJ0ZXh0LWNvbG9yKTtcXG4gIGZvbnQtc2l6ZTogLjZyZW07XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2hvdXJseS9ob3VybHkuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjs7RUFFbEIsYUFBYTtFQUNiLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsZ0JBQWdCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ob3VybHktdGVtcHMge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBvdmVyZmxvdy14OiBzY3JvbGw7XFxuXFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNDgsIDFmcik7XFxufVxcblxcbi5jYXJkLWhvdXJseSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmhvdXJseS1yYWluIHtcXG4gIGNvbG9yOiByZ2IoMCwgMTIzLCAyNTUpO1xcbiAgZm9udC1zaXplOiAuN3JlbTtcXG59XFxuXFxuLnBlcmlvZCB7XFxuICBjb2xvcjogdmFyKC0tc3VidGV4dC1jb2xvcik7XFxuICBmb250LXNpemU6IC42cmVtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIub3RoZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcXG59XFxuXFxuLm90aGVyPi53cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgNzBweCk7XFxuICBncmlkLWF1dG8tcm93czogNzBweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLm90aGVyPi53cmFwcGVyPioge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogMjBweDtcXG59XFxuXFxuLm90aGVyIHNwYW4ge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgZm9udC1zaXplOiAuOHJlbTtcXG59XFxuXFxuLm90aGVyLWxhYmVsIHtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICBjb2xvcjogdmFyKC0tc3VidGV4dC1jb2xvcikgIWltcG9ydGFudDtcXG4gIGZvbnQtc2l6ZTogLjdyZW0gIWltcG9ydGFudDtcXG59XFxuXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xcblxcbiAgLm90aGVyPi53cmFwcGVyIHtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcXG5cXG4gIH1cXG5cXG4gIC5vdGhlciBzcGFuIHtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgfVxcblxcbiAgLm90aGVyIHtcXG4gICAgb3JkZXI6IDU7XFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL290aGVyL290aGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsbUNBQW1DO0VBQ25DLG9CQUFvQjtFQUNwQix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHNDQUFzQztFQUN0QywyQkFBMkI7QUFDN0I7O0FBRUE7O0VBRUU7SUFDRSxxQ0FBcUM7O0VBRXZDOztFQUVBO0lBQ0UsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLFFBQVE7RUFDVjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5vdGhlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xcbn1cXG5cXG4ub3RoZXI+LndyYXBwZXIge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCA3MHB4KTtcXG4gIGdyaWQtYXV0by1yb3dzOiA3MHB4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ub3RoZXI+LndyYXBwZXI+KiB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyMHB4O1xcbn1cXG5cXG4ub3RoZXIgc3BhbiB7XFxuICBjb2xvcjogd2hpdGU7XFxuICBmb250LXNpemU6IC44cmVtO1xcbn1cXG5cXG4ub3RoZXItbGFiZWwge1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIGNvbG9yOiB2YXIoLS1zdWJ0ZXh0LWNvbG9yKSAhaW1wb3J0YW50O1xcbiAgZm9udC1zaXplOiAuN3JlbSAhaW1wb3J0YW50O1xcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuXFxuICAub3RoZXI+LndyYXBwZXIge1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xcblxcbiAgfVxcblxcbiAgLm90aGVyIHNwYW4ge1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICB9XFxuXFxuICAub3RoZXIge1xcbiAgICBvcmRlcjogNTtcXG4gIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb21wb25lbnRzL2N1cnJlbnQvY3VycmVudC5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb21wb25lbnRzL2RhaWx5L2RhaWx5LmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbXBvbmVudHMvaG91cmx5L2hvdXJseS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb21wb25lbnRzL290aGVyL290aGVyLmNzc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzNfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1pbnB1dC1ib3JkZXItcmFkaXVzOiA1cHg7XFxuICAtLXN1YnRleHQtY29sb3I6IHJnYigxNTcsIDE1NywgMTU3KTtcXG4gIC0tdGhlbWUtY29sb3I6IHJnYigyMzUsIDExMSwgNzYpO1xcbn1cXG5cXG4qIHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5oaWRlIHtcXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcXG59XFxuXFxuLndyYXBwZXIge1xcbiAgcGFkZGluZzogMCAyMHB4O1xcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XFxuICBtYXJnaW46IGF1dG87XFxufVxcblxcbmltZyB7XFxuICBoZWlnaHQ6IDUwcHg7XFxufVxcblxcbi50b3AtaGFsZiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcGFkZGluZy10b3A6IDIwcHg7XFxuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcXG59XFxuXFxuLnJlc3VsdHMge1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxufVxcblxcbi5lcnJvci5hY3RpdmUge1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICB3aWR0aDogOTAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgY29sb3I6IHJlZDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1pbnB1dC1ib3JkZXItcmFkaXVzKTtcXG59XFxuXFxuLmxvYWRpbmctc2NyZWVuIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQwOCk7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwdnc7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubG9hZGVyIHtcXG4gIC8qIGJhY2tncm91bmQgKi9cXG4gIGJvcmRlcjogMTZweCBzb2xpZCByZ2IoMjQzLCAyNDMsIDI0Myk7XFxuICAvKiBmb3JkZ3JvdW5kICovXFxuICBib3JkZXItdG9wOiAxNnB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yKTtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIHdpZHRoOiAxMjBweDtcXG4gIGhlaWdodDogMTIwcHg7XFxuICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHNwaW4ge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcXG4gIH1cXG5cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbiAgfVxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQU1BO0VBQ0UsMEJBQTBCO0VBQzFCLG1DQUFtQztFQUNuQyxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHlDQUF5QztFQUN6QyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIscUJBQXFCO0VBQ3JCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsNENBQTRDO0VBQzVDLFlBQVk7RUFDWixZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YscUNBQXFDO0VBQ3JDLGVBQWU7RUFDZix5Q0FBeUM7RUFDekMsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixhQUFhO0VBQ2Isa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0U7SUFDRSx1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jc3MnO1xcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9jdXJyZW50L2N1cnJlbnQuY3NzJztcXG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvZGFpbHkvZGFpbHkuY3NzJztcXG5AaW1wb3J0ICcuL2NvbXBvbmVudHMvaG91cmx5L2hvdXJseS5jc3MnO1xcbkBpbXBvcnQgJy4vY29tcG9uZW50cy9vdGhlci9vdGhlci5jc3MnO1xcblxcbjpyb290IHtcXG4gIC0taW5wdXQtYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgLS1zdWJ0ZXh0LWNvbG9yOiByZ2IoMTU3LCAxNTcsIDE1Nyk7XFxuICAtLXRoZW1lLWNvbG9yOiByZ2IoMjM1LCAxMTEsIDc2KTtcXG59XFxuXFxuKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uaGlkZSB7XFxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XFxufVxcblxcbi53cmFwcGVyIHtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG4gIG1heC13aWR0aDogMTAwMHB4O1xcbiAgbWFyZ2luOiBhdXRvO1xcbn1cXG5cXG5pbWcge1xcbiAgaGVpZ2h0OiA1MHB4O1xcbn1cXG5cXG4udG9wLWhhbGYge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBhZGRpbmctdG9wOiAyMHB4O1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxufVxcblxcbi5yZXN1bHRzIHtcXG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xcbn1cXG5cXG4uZXJyb3IuYWN0aXZlIHtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgd2lkdGg6IDkwJTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiByZWQ7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgYm9yZGVyOiAycHggc29saWQgcmVkO1xcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0taW5wdXQtYm9yZGVyLXJhZGl1cyk7XFxufVxcblxcbi5sb2FkaW5nLXNjcmVlbiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40MDgpO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmxvYWRlciB7XFxuICAvKiBiYWNrZ3JvdW5kICovXFxuICBib3JkZXI6IDE2cHggc29saWQgcmdiKDI0MywgMjQzLCAyNDMpO1xcbiAgLyogZm9yZGdyb3VuZCAqL1xcbiAgYm9yZGVyLXRvcDogMTZweCBzb2xpZCB2YXIoLS10aGVtZS1jb2xvcik7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB3aWR0aDogMTIwcHg7XFxuICBoZWlnaHQ6IDEyMHB4O1xcbiAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcXG59XFxuXFxuQGtleWZyYW1lcyBzcGluIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxuICB9XFxuXFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXG4gIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgZ2V0R2VvY29kZSBmcm9tIFwiLi9ub21pbmF0aW1cIjtcblxuY29uc3QgZ2V0V2VhdGhlciA9IGFzeW5jIChjaXR5LCB1bml0KSA9PiB7XG4gIGNvbnN0IGxvYWRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWRpbmctc2NyZWVuXCIpO1xuICBsb2FkaW5nLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRlXCIpO1xuICB0cnkge1xuICAgIGNvbnN0IGdlb2NvZGUgPSBhd2FpdCBnZXRHZW9jb2RlKGNpdHkpO1xuICAgIGlmIChnZW9jb2RlLmNvZCAhPT0gMjAwKSB7XG4gICAgICBsb2FkaW5nLmNsYXNzTGlzdC5hZGQoXCJoaWRlXCIpO1xuICAgICAgcmV0dXJuIGdlb2NvZGU7XG4gICAgfVxuICAgIGNvbnN0IHsgbGF0LCBsb24sIG5hbWUgfSA9IGdlb2NvZGU7XG4gICAgY29uc29sZS5sb2cocHJvY2Vzcy5lbnYuV0VBVEhFUl9BUEkpO1xuICAgIGNvbnN0IHdlYXRoZXJSZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgIGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8zLjAvb25lY2FsbD9sYXQ9JHtsYXR9Jmxvbj0ke2xvbn0mYXBwaWQ9JHtwcm9jZXNzLmVudi5XRUFUSEVSX0FQSX0mdW5pdHM9JHt1bml0fWBcbiAgICApO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB3ZWF0aGVyUmVzLmpzb24oKTtcbiAgICBsb2FkaW5nLmNsYXNzTGlzdC5hZGQoXCJoaWRlXCIpO1xuXG4gICAgaWYgKGRhdGEuY29kKSB7XG4gICAgICBjb25zdCB7IG1lc3NhZ2UgfSA9IGRhdGE7XG4gICAgICByZXR1cm4geyBtZXNzYWdlIH07XG4gICAgfVxuXG4gICAgY29uc3QgeyBjdXJyZW50LCBkYWlseSwgaG91cmx5LCBtaW51dGVseSwgdGltZXpvbmUgfSA9IGRhdGE7XG5cbiAgICByZXR1cm4geyBuYW1lLCBjdXJyZW50LCBkYWlseSwgaG91cmx5LCBtaW51dGVseSwgdGltZXpvbmUgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2FkaW5nLmNsYXNzTGlzdC5hZGQoXCJoaWRlXCIpO1xuICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnJvcik7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGdldFdlYXRoZXI7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbmNvbnN0IGdldEdlb2NvZGUgPSBhc3luYyAoY2l0eSkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICBgaHR0cHM6Ly9ub21pbmF0aW0ub3BlbnN0cmVldG1hcC5vcmcvc2VhcmNoP3E9JHtjaXR5fSZmb3JtYXQ9anNvbiZsaW1pdD0xYFxuICApO1xuXG4gIGNvbnN0IFtkYXRhXSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IHsgZGlzcGxheV9uYW1lLCBsYXQsIGxvbiB9ID0gZGF0YTtcbiAgICBjb25zdCBuYW1lID0gZGlzcGxheV9uYW1lLnNwbGl0KFwiLFwiKVswXTtcbiAgICByZXR1cm4geyBsYXQsIGxvbiwgbmFtZSwgY29kOiAyMDAgfTtcbiAgfVxuXG4gIGNvbnN0IG1lc3NhZ2UgPSB7IGNvZDogNDA0LCBtZXNzYWdlOiBcIkNvdWxkIG5vdCBmaW5kIGNpdHkuXCIgfTtcbiAgcmV0dXJuIG1lc3NhZ2U7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZXRHZW9jb2RlO1xuIiwiZXhwb3J0IGNvbnN0IGdldFRpbWUgPSAodW5peFRpbWUsIHRpbWV6b25lKSA9PiB7XG4gIGNvbnN0IG1zVGltZSA9IHVuaXhUaW1lICogMTAwMDtcbiAgY29uc3QgdGltZVN0cmluZyA9IG5ldyBEYXRlKG1zVGltZSkudG9Mb2NhbGVUaW1lU3RyaW5nKFwiZW4tVVNcIiwge1xuICAgIHRpbWVab25lOiB0aW1lem9uZSxcbiAgICB0aW1lU3R5bGU6IFwic2hvcnRcIixcbiAgfSk7XG5cbiAgcmV0dXJuIHRpbWVTdHJpbmc7XG59O1xuZXhwb3J0IGNvbnN0IGdldERheSA9ICh1bml4VGltZSwgdGltZXpvbmUpID0+IHtcbiAgY29uc3QgbXNUaW1lID0gdW5peFRpbWUgKiAxMDAwO1xuICBjb25zdCBkYXlTdHJpbmcgPSBuZXcgRGF0ZShtc1RpbWUpLnRvTG9jYWxlU3RyaW5nKFwiZW4tVVNcIiwge1xuICAgIHRpbWVab25lOiB0aW1lem9uZSxcbiAgICB3ZWVrZGF5OiBcImxvbmdcIixcbiAgfSk7XG5cbiAgcmV0dXJuIGRheVN0cmluZztcbn07XG4iLCJjb25zdCByZW1vdmVBbGxDaGlsZE5vZGVzID0gKHBhcmVudCkgPT4ge1xuICB3aGlsZSAocGFyZW50LmZpcnN0Q2hpbGQpIHtcbiAgICBwYXJlbnQucmVtb3ZlQ2hpbGQocGFyZW50LmZpcnN0Q2hpbGQpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCByZW1vdmVBbGxDaGlsZE5vZGVzO1xuIiwibGV0IGN1cnJlbnRMb2NhdGlvbjtcblxuZXhwb3J0IGNvbnN0IHNldEN1cnJlbnRMb2NhdGlvbiA9IChsb2NhdGlvbikgPT4ge1xuICBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvbjtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50TG9jYXRpb24gPSAoKSA9PiBjdXJyZW50TG9jYXRpb247XG4iLCJpbXBvcnQgZ2V0V2VhdGhlciBmcm9tIFwiLi9vcGVuV2VhdGhlclwiO1xuaW1wb3J0IG1ha2VDdXJyZW50Q2FyZCBmcm9tIFwiLi9jdXJyZW50L21ha2VDdXJyZW50Q2FyZFwiO1xuaW1wb3J0IG1ha2VPdGhlckNhcmQgZnJvbSBcIi4vb3RoZXIvbWFrZU90aGVyQ2FyZFwiO1xuaW1wb3J0IG1ha2VIb3VybHlDYXJkIGZyb20gXCIuL2hvdXJseS9tYWtlSG91cmx5Q2FyZFwiO1xuaW1wb3J0IG1ha2VEYWlseUNhcmQgZnJvbSBcIi4vZGFpbHkvbWFrZURhaWx5Q2FyZFwiO1xuaW1wb3J0IHJlbW92ZUFsbENoaWxkTm9kZXMgZnJvbSBcIi4vcmVtb3ZlQWxsQ2hpbGROb2Rlc1wiO1xuaW1wb3J0IHJvdW5kVGVtcHMgZnJvbSBcIi4vcm91bmRUZW1wc1wiO1xuaW1wb3J0IG1ha2VEYWlseUhlYWRpbmdzIGZyb20gXCIuL2RhaWx5L21ha2VEYWlseUhlYWRpbmdzXCI7XG5pbXBvcnQgeyBzZXRDdXJyZW50TG9jYXRpb24gfSBmcm9tIFwiLi9jdXJyZW50TG9jYXRpb25cIjtcblxuY29uc3Qgc2V0V2VhdGhlciA9IGFzeW5jIChsb2NhdGlvbiwgdW5pdCA9IFwiaW1wZXJpYWxcIikgPT4ge1xuICBjb25zdCBob3VybHlUZW1wcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaG91cmx5LXRlbXBzXCIpO1xuICBjb25zdCBkYWlseVRlbXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kYWlseS10ZW1wc1wiKTtcbiAgY29uc3QgZXJyb3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVycm9yXCIpO1xuXG4gIGNvbnN0IHdlYXRoZXIgPSBhd2FpdCBnZXRXZWF0aGVyKGxvY2F0aW9uLCB1bml0KTtcbiAgaWYgKHdlYXRoZXIubWVzc2FnZSkge1xuICAgIGVycm9yLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgZXJyb3IudGV4dENvbnRlbnQgPSB3ZWF0aGVyLm1lc3NhZ2U7XG4gICAgcmV0dXJuO1xuICB9XG4gIGVycm9yLnRleHRDb250ZW50ID0gXCJcIjtcbiAgZXJyb3IuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcblxuICByZW1vdmVBbGxDaGlsZE5vZGVzKGhvdXJseVRlbXBzKTtcbiAgcmVtb3ZlQWxsQ2hpbGROb2RlcyhkYWlseVRlbXBzKTtcblxuICBjb25zdCB7IG5hbWUsIGN1cnJlbnQsIGRhaWx5LCBob3VybHksIG1pbnV0ZWx5LCB0aW1lem9uZSB9ID0gd2VhdGhlcjtcbiAgc2V0Q3VycmVudExvY2F0aW9uKG5hbWUpO1xuXG4gIC8vIGN1cnJlbnQgY29uZGl0b25zXG4gIG1ha2VDdXJyZW50Q2FyZChuYW1lLCBjdXJyZW50LCBkYWlseSwgdGltZXpvbmUpO1xuXG4gIC8vIG90aGVyIGRhdGFcbiAgbWFrZU90aGVyQ2FyZChjdXJyZW50LCBtaW51dGVseSwgdGltZXpvbmUsIHVuaXQpO1xuXG4gIC8vIGhvdXJseSBjb25kaXRpb25zXG4gIGhvdXJseS5mb3JFYWNoKChob3VyKSA9PiB7XG4gICAgbWFrZUhvdXJseUNhcmQoaG91ciwgdGltZXpvbmUpO1xuICB9KTtcblxuICAvLyBkYWlseSBjb25kaXRpb25zXG4gIG1ha2VEYWlseUhlYWRpbmdzKCk7XG4gIGRhaWx5LnNoaWZ0KCk7XG4gIGRhaWx5LmZvckVhY2goKGRheSkgPT4ge1xuICAgIG1ha2VEYWlseUNhcmQoZGF5LCB0aW1lem9uZSk7XG4gIH0pO1xuXG4gIHJvdW5kVGVtcHMoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNldFdlYXRoZXI7XG4iLCJpbXBvcnQgeyBnZXRUaW1lIH0gZnJvbSBcIi4uL2Zvcm1hdFRpbWVcIjtcblxuY29uc3QgbWFrZUN1cnJlbnRDYXJkID0gKG5hbWUsIGN1cnJlbnQsIGRhaWx5LCB0aW1lem9uZSkgPT4ge1xuICBjb25zdCB7XG4gICAgdGVtcCxcbiAgICBkdDogdGltZSxcbiAgICB3ZWF0aGVyOiBbeyBtYWluOiBjb25kaXRpb24sIGljb24sIGRlc2NyaXB0aW9uIH1dLFxuICB9ID0gY3VycmVudDtcblxuICBjb25zdCBbXG4gICAge1xuICAgICAgdGVtcDogeyBtaW4sIG1heCB9LFxuICAgIH0sXG4gIF0gPSBkYWlseTtcblxuICBjb25zdCBjdXJyZW50VGltZSA9IGdldFRpbWUodGltZSwgdGltZXpvbmUpO1xuXG4gIGNvbnN0IGN1cnJlbnRUZW1wcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudC10ZW1wc1wiKTtcbiAgY3VycmVudFRlbXBzLmlubmVySFRNTCA9IGBcbiAgPGRpdiBjbGFzcz1cImNpdHktbmFtZVwiPiR7bmFtZX08L2Rpdj5cbiAgPGRpdj48c3BhbiBjbGFzcz1cImN1cnJlbnQtY29uZGl0aW9uc1wiPiR7Y29uZGl0aW9ufTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJjdXJyZW50LXRpbWVcIj4ke2N1cnJlbnRUaW1lfTwvc3Bhbj48L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImN1cnJlbnQtdGVtcFwiPjxzcGFuIGNsYXNzPVwiY3VycmVudC1jb25kaXRpb25zXCI+PGltZyBzcmM9XCJodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29ufUAyeC5wbmdcIiBhbHQ9XCIke2Rlc2NyaXB0aW9ufVwiLz48L3NwYW4+IDxzcGFuIGNsYXNzPVwibnVtYmVyLXRlbXBcIj4ke3RlbXB9PC9zcGFuPsKwPC9kaXY+XG4gIFxuICA8ZGl2IGNsYXNzPVwiY3VycmVudC1oaS1sb1wiPlxuICAgIDxzcGFuIGNsYXNzPVwibG93LXRlbXBcIj5MOjxzcGFuIGNsYXNzPVwibG93LXRlbXBcIj48c3BhbiBjbGFzcz1cIm51bWJlci10ZW1wXCI+JHttaW59PC9zcGFuPsKwPC9zcGFuPjwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz1cImhpZ2gtdGVtcFwiPkg6PHNwYW4gY2xhc3M9XCJoaWdoLXRlbXBcIj48c3BhbiBjbGFzcz1cIm51bWJlci10ZW1wXCI+JHttYXh9PC9zcGFuPsKwPC9zcGFuPjwvc3Bhbj5cbiAgPC9kaXY+XG4gIGA7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYWtlQ3VycmVudENhcmQ7XG4iLCJpbXBvcnQgeyBnZXRUaW1lIH0gZnJvbSBcIi4uL2Zvcm1hdFRpbWVcIjtcblxuY29uc3QgbWFrZU90aGVyQ2FyZCA9IChjdXJyZW50LCBtaW51dGVseSwgdGltZXpvbmUsIHVuaXQpID0+IHtcbiAgY29uc3Qge1xuICAgIHdpbmRfc3BlZWQ6IHNwZWVkLFxuICAgIGZlZWxzX2xpa2U6IGZlZWxzTGlrZSxcbiAgICBjbG91ZHM6IGNsb3VkaW5lc3MsXG4gICAgdmlzaWJpbGl0eSxcbiAgICBwcmVzc3VyZSxcbiAgICBodW1pZGl0eSxcbiAgICBzdW5yaXNlLFxuICAgIHN1bnNldCxcbiAgICB1dmksXG4gIH0gPSBjdXJyZW50O1xuICBjb25zdCBbeyBwcmVjaXBpdGF0aW9uIH1dID0gbWludXRlbHk7XG5cbiAgY29uc3QgaGdQcmVzc3VyZSA9IChwcmVzc3VyZSAqIDAuMDI5NTI5OTgzMDcxNDQ1KS50b0ZpeGVkKDIpO1xuICBjb25zdCBzdW5yaXNlVGltZSA9IGdldFRpbWUoc3VucmlzZSwgdGltZXpvbmUpO1xuICBjb25zdCBzdW5zZXRUaW1lID0gZ2V0VGltZShzdW5zZXQsIHRpbWV6b25lKTtcbiAgbGV0IGRpc3RhbmNlID0gdmlzaWJpbGl0eTtcbiAgbGV0IHVuaXREaXN0YW5jZSA9IFwibVwiO1xuXG4gIGlmICh1bml0ID09PSBcImltcGVyaWFsXCIpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQgPSB2aXNpYmlsaXR5IC8gMTYwOTtcbiAgICBjb25zdCBtaWxlcyA9IGNvbnZlcnRlZC50b0ZpeGVkKDIpO1xuICAgIGRpc3RhbmNlID0gbWlsZXM7XG4gICAgdW5pdERpc3RhbmNlID0gXCJtaVwiO1xuICB9XG5cbiAgY29uc3Qgb3RoZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm90aGVyXCIpO1xuICBvdGhlci5pbm5lckhUTUwgPSBgXG4gIDxkaXYgY2xhc3M9XCJ3cmFwcGVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImZlZWxzLWxpa2VcIj48c3BhbiBjbGFzcz1cIm90aGVyLWxhYmVsXCI+RmVlbHMgbGlrZTwvc3Bhbj4gPHNwYW4+PHNwYW4gY2xhc3M9XCJudW1iZXItdGVtcFwiPiR7ZmVlbHNMaWtlfTwvc3Bhbj7CsDwvc3Bhbj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiaHVtaWRpdHlcIj48c3BhbiBjbGFzcz1cIm90aGVyLWxhYmVsXCI+SHVtaWRpdHk8L3NwYW4+IDxzcGFuPiR7aHVtaWRpdHl9JTwvc3Bhbj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwicHJlY2lwaXRhdGlvblwiPjxzcGFuIGNsYXNzPVwib3RoZXItbGFiZWxcIj5QcmVjaXBpdGF0aW9uPC9zcGFuPiA8c3Bhbj4ke3ByZWNpcGl0YXRpb259PHNwYW4+IG1tPC9zcGFuPjwvc3Bhbj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY2xvdWRpbmVzc1wiPjxzcGFuIGNsYXNzPVwib3RoZXItbGFiZWxcIj5DbG91ZGluZXNzPC9zcGFuPiA8c3Bhbj4ke2Nsb3VkaW5lc3N9JTwvc3Bhbj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwic3BlZWRcIj48c3BhbiBjbGFzcz1cIm90aGVyLWxhYmVsXCI+V2luZCBzcGVlZDwvc3Bhbj4gPHNwYW4+PHNwYW4gY2xhc3M9XCJudW1iZXItc3BlZWRcIj4ke3NwZWVkfTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJ1bml0LXNwZWVkXCI+bXBoPC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInV2aVwiPjxzcGFuIGNsYXNzPVwib3RoZXItbGFiZWxcIj5VViBJbmRleDwvc3Bhbj4gPHNwYW4+JHt1dml9PC9zcGFuPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJjbG91ZGluZXNzXCI+PHNwYW4gY2xhc3M9XCJvdGhlci1sYWJlbFwiPlZpc2liaWxpdHk8L3NwYW4+IDxzcGFuPjxzcGFuIGNsYXNzPVwibnVtYmVyLWRpc3RhbmNlXCI+JHtkaXN0YW5jZX08L3NwYW4+IDxzcGFuIGNsYXNzPVwidW5pdC1kaXN0YW5jZVwiPiR7dW5pdERpc3RhbmNlfTwvc3Bhbj48L3NwYW4+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInByZXNzdXJlXCI+PHNwYW4gY2xhc3M9XCJvdGhlci1sYWJlbFwiPlByZXNzdXJlPC9zcGFuPiA8c3Bhbj4ke2hnUHJlc3N1cmV9IGluSGc8L3NwYW4+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInN1bnJpc2VcIj48c3BhbiBjbGFzcz1cIm90aGVyLWxhYmVsXCI+U3VucmlzZTwvc3Bhbj4gPHNwYW4+JHtzdW5yaXNlVGltZX08L3NwYW4+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInN1bnNldFwiPjxzcGFuIGNsYXNzPVwib3RoZXItbGFiZWxcIj5TdW5zZXQ8L3NwYW4+IDxzcGFuPiR7c3Vuc2V0VGltZX08L3NwYW4+PC9kaXY+XG4gIDwvZGl2PlxuICBgO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWFrZU90aGVyQ2FyZDtcbiIsImltcG9ydCB7IGdldFRpbWUgfSBmcm9tIFwiLi4vZm9ybWF0VGltZVwiO1xuXG5jb25zdCBtYWtlSG91cmx5Q2FyZCA9IChob3VybHksIHRpbWV6b25lKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBwb3AsXG4gICAgdGVtcCxcbiAgICBkdDogdGltZSxcbiAgICB3ZWF0aGVyOiBbeyBpY29uLCBkZXNjcmlwdGlvbiB9XSxcbiAgfSA9IGhvdXJseTtcblxuICBjb25zdCBuZXdUaW1lID0gZ2V0VGltZSh0aW1lLCB0aW1lem9uZSk7XG4gIGNvbnN0IHNwbGl0VGltZSA9IG5ld1RpbWUuc3BsaXQoXCIgXCIpO1xuICBjb25zdCBob3VyID0gc3BsaXRUaW1lWzBdLnNwbGl0KFwiOlwiKVswXTtcbiAgY29uc3QgcGVyaW9kID0gc3BsaXRUaW1lWzFdO1xuICBjb25zdCByYWluUGVyYyA9IE1hdGgucm91bmQocG9wICogMTAwKTtcblxuICBjb25zdCBob3VybHlUZW1wcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaG91cmx5LXRlbXBzXCIpO1xuICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBjYXJkLmNsYXNzTGlzdC5hZGQoXCJjYXJkLWhvdXJseVwiKTtcbiAgY2FyZC5pbm5lckhUTUwgPSBgXG4gIDxkaXYgY2xhc3M9XCJob3VybHktdGltZVwiPiR7aG91cn08c3BhbiBjbGFzcz1cInBlcmlvZFwiPiR7cGVyaW9kfTwvc3Bhbj48L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImhvdXJseS1jb25kaXRpb25zXCI+PGltZyBzcmM9XCJodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29ufUAyeC5wbmdcIiBhbHQ9XCIke2Rlc2NyaXB0aW9ufVwiLz48L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImhvdXJseS10ZW1wXCI+PHNwYW4gY2xhc3M9XCJudW1iZXItdGVtcFwiPiR7dGVtcH08L3NwYW4+wrA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImhvdXJseS1yYWluXCI+JHtyYWluUGVyY30lPC9kaXY+XG4gIGA7XG5cbiAgaG91cmx5VGVtcHMuYXBwZW5kKGNhcmQpO1xuICByZXR1cm4gY2FyZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1ha2VIb3VybHlDYXJkO1xuIiwiY29uc3QgbWFrZURhaWx5SGVhZGluZ3MgPSAoKSA9PiB7XG4gIGNvbnN0IGRhaWx5VGVtcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRhaWx5LXRlbXBzXCIpO1xuXG4gIGNvbnN0IGhlYWRpbmdzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBoZWFkaW5ncy5jbGFzc0xpc3QuYWRkKFwiZGFpbHktaGVhZGluZ3NcIik7XG4gIGhlYWRpbmdzLmNsYXNzTGlzdC5hZGQoXCJjYXJkLWRhaWx5XCIpO1xuICBoZWFkaW5ncy5pbm5lckhUTUwgPSBgXG4gIDxkaXY+RGF5PC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJkYWlseS1jb25kaXRpb25zXCI+IDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZGFpbHktdGVtcFwiPkxvdy9IaWdoPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJkYWlseS1yYWluXCI+UmFpbjwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZGFpbHktaHVtaWRpdHlcIj5IdW1pZGl0eTwvZGl2PlxuICBgO1xuXG4gIGRhaWx5VGVtcHMuYXBwZW5kKGhlYWRpbmdzKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1ha2VEYWlseUhlYWRpbmdzO1xuIiwiaW1wb3J0IHsgZ2V0RGF5IH0gZnJvbSBcIi4uL2Zvcm1hdFRpbWVcIjtcblxuY29uc3QgbWFrZURhaWx5Q2FyZCA9IChkYWlseSkgPT4ge1xuICBjb25zdCB7XG4gICAgd2VhdGhlcjogW3sgaWNvbiwgZGVzY3JpcHRpb24gfV0sXG4gICAgdGVtcDogeyBtaW4sIG1heCB9LFxuICAgIGR0OiB0aW1lLFxuICAgIGh1bWlkaXR5LFxuICAgIHBvcCxcbiAgfSA9IGRhaWx5O1xuXG4gIGNvbnN0IHJhaW5QZXJjID0gTWF0aC5yb3VuZChwb3AgKiAxMDApO1xuICBjb25zdCBkYXkgPSBnZXREYXkodGltZSk7XG4gIGNvbnN0IGRhaWx5VGVtcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRhaWx5LXRlbXBzXCIpO1xuICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBjYXJkLmNsYXNzTGlzdC5hZGQoXCJjYXJkLWRhaWx5XCIpO1xuICBjYXJkLmlubmVySFRNTCA9IGBcbiAgPGRpdiBjbGFzcz1cIndlZWtkYXlcIj4ke2RheX08L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImRhaWx5LWNvbmRpdGlvbnNcIj48aW1nIHNyYz1cImh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93bi8ke2ljb259QDJ4LnBuZ1wiIGFsdD1cIiR7ZGVzY3JpcHRpb259XCIvPjwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZGFpbHktdGVtcFwiPjxzcGFuIGNsYXNzPVwiZGFpbHktbG9cIj48c3BhbiBjbGFzcz1cIm51bWJlci10ZW1wXCI+JHttaW59PC9zcGFuPsKwPC9zcGFuPiA8c3BhbiBjbGFzcz1cImRhaWx5LWhpXCI+PHNwYW4gY2xhc3M9XCJudW1iZXItdGVtcFwiPiR7bWF4fTwvc3Bhbj7CsDwvc3Bhbj48L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImRhaWx5LXJhaW5cIj4ke3JhaW5QZXJjfSU8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImRhaWx5LWh1bWlkaXR5XCI+JHtodW1pZGl0eX0lPC9kaXY+XG4gIGA7XG5cbiAgZGFpbHlUZW1wcy5hcHBlbmQoY2FyZCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYWtlRGFpbHlDYXJkO1xuIiwiY29uc3Qgcm91bmRUZW1wcyA9ICgpID0+IHtcbiAgY29uc3QgbnVtYmVyVGVtcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm51bWJlci10ZW1wXCIpO1xuICBudW1iZXJUZW1wcy5mb3JFYWNoKCh0ZW1wKSA9PiB7XG4gICAgdGVtcC50ZXh0Q29udGVudCA9IE1hdGgucm91bmQodGVtcC50ZXh0Q29udGVudCk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcm91bmRUZW1wcztcbiIsImltcG9ydCB7IGdldEN1cnJlbnRMb2NhdGlvbiB9IGZyb20gXCIuL2N1cnJlbnRMb2NhdGlvblwiO1xuaW1wb3J0IHNldFdlYXRoZXIgZnJvbSBcIi4vc2V0V2VhdGhlclwiO1xuXG5sZXQgdW5pdCA9IFwiaW1wZXJpYWxcIjtcblxuY29uc3QgY2hhbmdlV2luZFNwZWVkID0gKHN0cikgPT4ge1xuICBjb25zdCB1bml0U3BlZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVuaXQtc3BlZWRcIik7XG4gIHVuaXRTcGVlZC50ZXh0Q29udGVudCA9IHN0cjtcbn07XG5cbmNvbnN0IHRvZ2dsZVVuaXRzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjdXJyZW50TG9jYXRpb24gPSBnZXRDdXJyZW50TG9jYXRpb24oKTtcbiAgaWYgKHVuaXQgPT09IFwiaW1wZXJpYWxcIikge1xuICAgIGF3YWl0IHNldFdlYXRoZXIoY3VycmVudExvY2F0aW9uLCBcIm1ldHJpY1wiKTtcbiAgICBjaGFuZ2VXaW5kU3BlZWQoXCJtL3NcIik7XG4gICAgdW5pdCA9IFwibWV0cmljXCI7XG4gIH0gZWxzZSB7XG4gICAgYXdhaXQgc2V0V2VhdGhlcihjdXJyZW50TG9jYXRpb24sIFwiaW1wZXJpYWxcIik7XG4gICAgY2hhbmdlV2luZFNwZWVkKFwibXBoXCIpO1xuICAgIHVuaXQgPSBcImltcGVyaWFsXCI7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRvZ2dsZVVuaXRzO1xuIiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcbmltcG9ydCBtYWtlSGVhZGVyIGZyb20gXCIuL2NvbXBvbmVudHMvaGVhZGVyL21ha2VIZWFkZXJcIjtcbmltcG9ydCBtYWtlTWFpbiBmcm9tIFwiLi9jb21wb25lbnRzL21ha2VNYWluXCI7XG5pbXBvcnQgc2V0V2VhdGhlciBmcm9tIFwiLi9jb21wb25lbnRzL3NldFdlYXRoZXJcIjtcbmltcG9ydCB0b2dnbGVVbml0cyBmcm9tIFwiLi9jb21wb25lbnRzL3RvZ2dsZVVuaXRzXCI7XG5cbmRvY3VtZW50LmJvZHkuYXBwZW5kKG1ha2VIZWFkZXIoKSwgbWFrZU1haW4oKSk7XG5cbmNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybVwiKTtcbmNvbnN0IHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoXCIpO1xuY29uc3QgdG9nZ2xlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2dnbGUtdW5pdHNcIik7XG5cbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHNldFdlYXRoZXIoc2VhcmNoLnZhbHVlKTtcbn0pO1xuXG50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZVVuaXRzKTtcblxuc2V0V2VhdGhlcihcIkxvcyBBbmdlbGVzXCIpO1xuIiwiY29uc3QgbWFrZUhlYWRlciA9ICgpID0+IHtcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhlYWRlclwiKTtcblxuICBoZWFkZXIuaW5uZXJIVE1MID0gYFxuICAgIDxmb3JtIGNsYXNzPVwid3JhcHBlclwiPlxuICAgICAgPGxhYmVsIGZvcj1cInNlYXJjaFwiXG4gICAgICAgID48aW5wdXQgXG4gICAgICAgIHR5cGU9XCJ0ZXh0XCIgXG4gICAgICAgIG5hbWU9XCJzZWFyY2hcIiBcbiAgICAgICAgaWQ9XCJzZWFyY2hcIlxuICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIGEgY2l0eVwiXG4gICAgICAvPjwvbGFiZWw+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIj5TZWFyY2g8L2J1dHRvbj5cbiAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwidG9nZ2xlLXVuaXRzXCI+TWV0cmljOiDCsEMsIG1ldGVycy8gSW1wZXJpYWw6IMKwRiwgbWlsZXM8L2J1dHRvbj5cbiAgICA8L2Zvcm0+XG4gIGA7XG5cbiAgcmV0dXJuIGhlYWRlcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1ha2VIZWFkZXI7XG4iLCJjb25zdCBtYWtlTWFpbiA9ICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO1xuXG4gIG1haW4uaW5uZXJIVE1MID0gYFxuICA8ZGl2IGNsYXNzPVwibG9hZGluZy1zY3JlZW5cIj5cbiAgICA8ZGl2IGNsYXNzPVwibG9hZGVyXCI+PC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwicmVzdWx0c1wiPlxuICAgIDxkaXYgY2xhc3M9XCJlcnJvciB3cmFwcGVyXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRvcC1oYWxmIHdyYXBwZXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjdXJyZW50LXRlbXBzXCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiaG91cmx5LXRlbXBzXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwib3RoZXJcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZGFpbHktdGVtcHMgd3JhcHBlclwiPjwvZGl2PlxuICA8L2Rpdj5cbiAgXG4gIGA7XG5cbiAgcmV0dXJuIG1haW47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYWtlTWFpbjtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImkiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJhc3luYyIsImNpdHkiLCJ1bml0IiwibG9hZGluZyIsImNsYXNzTGlzdCIsImdlb2NvZGUiLCJyZXMiLCJmZXRjaCIsImpzb24iLCJkaXNwbGF5X25hbWUiLCJsYXQiLCJsb24iLCJuYW1lIiwic3BsaXQiLCJjb2QiLCJtZXNzYWdlIiwiYWRkIiwiY29uc29sZSIsImxvZyIsIldFQVRIRVJfQVBJIiwid2VhdGhlclJlcyIsImN1cnJlbnQiLCJkYWlseSIsImhvdXJseSIsIm1pbnV0ZWx5IiwidGltZXpvbmUiLCJlcnJvciIsImdldFRpbWUiLCJ1bml4VGltZSIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJ0aW1lWm9uZSIsInRpbWVTdHlsZSIsInBhcmVudCIsImN1cnJlbnRMb2NhdGlvbiIsImdldEN1cnJlbnRMb2NhdGlvbiIsImxvY2F0aW9uIiwiaG91cmx5VGVtcHMiLCJkYWlseVRlbXBzIiwid2VhdGhlciIsInRleHRDb250ZW50Iiwic2V0Q3VycmVudExvY2F0aW9uIiwidGVtcCIsImR0IiwidGltZSIsIm1haW4iLCJjb25kaXRpb24iLCJpY29uIiwiZGVzY3JpcHRpb24iLCJtaW4iLCJtYXgiLCJjdXJyZW50VGltZSIsImlubmVySFRNTCIsIndpbmRfc3BlZWQiLCJzcGVlZCIsImZlZWxzX2xpa2UiLCJmZWVsc0xpa2UiLCJjbG91ZHMiLCJjbG91ZGluZXNzIiwidmlzaWJpbGl0eSIsInByZXNzdXJlIiwiaHVtaWRpdHkiLCJzdW5yaXNlIiwic3Vuc2V0IiwidXZpIiwicHJlY2lwaXRhdGlvbiIsImhnUHJlc3N1cmUiLCJ0b0ZpeGVkIiwic3VucmlzZVRpbWUiLCJzdW5zZXRUaW1lIiwiZGlzdGFuY2UiLCJ1bml0RGlzdGFuY2UiLCJmb3JFYWNoIiwiaG91ciIsInBvcCIsInNwbGl0VGltZSIsInBlcmlvZCIsInJhaW5QZXJjIiwiTWF0aCIsInJvdW5kIiwiY2FyZCIsImFwcGVuZCIsImhlYWRpbmdzIiwic2hpZnQiLCJkYXkiLCJ0b0xvY2FsZVN0cmluZyIsIndlZWtkYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2hhbmdlV2luZFNwZWVkIiwic3RyIiwiYm9keSIsImhlYWRlciIsInNlYXJjaCIsImdldEVsZW1lbnRCeUlkIiwidG9nZ2xlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9